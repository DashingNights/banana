<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous" />
		<link rel="stylesheet" href="/cdn/css/customstyle.css" />
		<meta http-equiv="X-UA-Compatible" content="ie=edge" />
		<link rel="manifest" href="/manifest.json" />
		<link rel="icon" href="/cdn/logo.jpg" />
		<title><%= article.title %></title>
	</head>
	<body>
		<div class="show-container">
			<p></p>
			<h6 class="mb-1"><%= article.title %></h6>
			<div class="text-muted mb-2"><%= article.createdAt.toLocaleDateString() %> - <%= article.author %> <%= article.hashtags %></div>
			<a href="/home?type=Both" class="btn btn-secondary">All Articles</a>
			<p></p>
			<div class="limit"><%- article.sanitizedHtml %></div>
			<p></p>
			<div>
				<button id="upvote-button-<%= article._id %>" class="btn btn-success upvote-button" data-article-id="<%= article._id %>" data-user-upvote-count="<%= article.userUpvoteCount %>">üëç I like this x <%= article.userUpvoteCount %></button>
				<!-- <button id="downvote-button-<%= article._id %>" class="btn btn-secondary downvote-button">üëé</button> -->
				<!-- <button id="debug-button-<%= article._id %>" class="btn btn-secondary debug-button" data-article-id="<%= article._id %>" data-user-upvote-count="<%= article.userUpvoteCount %>">Debug</button> -->
			</div>
			<p></p>
			<%- article.type %>
			<p></p>
			<button href="#" id="shareButton" type="button" class="btn btn-primary">
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-share">
					<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
					<polyline points="16 6 12 2 8 6"></polyline>
					<line x1="12" y1="2" x2="12" y2="15"></line>
				</svg>
				Share This
			</button>
			<p></p>
			<p></p>
			<p></p>
			<!-- too lazy to set padding -->
		</div>
		<p><br /></p>
		<%- include('components/_footer') %>
	</body>
	<script>
		const shareButton = document.getElementById("shareButton");
		shareButton.addEventListener("click", async () => {
			try {
				if (navigator.share) {
					const shareData = {
						title: "<%= article.title %>",
						text: "<%= article.description %>",
						url: window.location.href,
					};
					await navigator.share(shareData);
				} else {
					const url = window.location.href;
					const dummy = document.createElement("textarea");
					dummy.value = url;
					dummy.setAttribute("readonly", "");
					dummy.style.position = "absolute";
					dummy.style.left = "-9999px";
					document.body.appendChild(dummy);
					dummy.select();
					document.execCommand("copy");
					document.body.removeChild(dummy);
					alert(`Link copied to clipboard :) \n also check if you are using HTTPS.`);
				}
			} catch (err) {
				if (err.name === "AbortError") {
					return;
				} else {
					console.log(err);
					alert(`Oops, something broke. Please report this bug!`);
					const url = "/bugreport";
					const data = {
						title: "error sharing",
						issue: `${err}`,
					};
					fetch(url, {
						method: "POST",
						headers: {
							"Content-Type": "application/json",
						},
						body: JSON.stringify(data),
					});
				}
			}
		});
	</script>
	<script>
		const debugButtons = document.querySelectorAll(".debug-button");
	
		// Add event listener to each button
		debugButtons.forEach((button) => {
			const articleId = button.dataset.articleId;
			button.addEventListener("click", function () {
				console.log("Debug button clicked");
				fetch(`/articles/${articleId}/upvotes`)
					.then((response) => response.json())
					.then((data) => {
						console.log("Upvote count: " + data.userUpvoteCount);
					})
					.catch((error) => {
						console.error("Error:", error);
					});
			});
		});
		// Get all upvote buttons
		const upvoteButtons = document.querySelectorAll(".upvote-button");
		// Add event listener to each button
		upvoteButtons.forEach((button) => {
			const articleId = button.dataset.articleId;
	
			// Check if the user has already upvoted this article
			const hasUpvoted = localStorage.getItem("hasUpvoted-" + articleId);
			if (hasUpvoted) {
				button.disabled = true;
			}
	
			button.addEventListener("click", function () {
				console.log("Upvote button clicked");
	
				fetch("/userinfo")
					.then((response) => {
						if (!response.ok) {
							throw new Error("Not logged in");
						}
						return response.json();
					})
					.then((data) => {
						// User is logged in, increment upvote count in MongoDB
						fetch("/articles/upvote", {
							method: "POST",
							headers: {
								"Content-Type": "application/json",
							},
							body: JSON.stringify({ articleId: articleId }),
						})
							.then((response) => response.json())
							.then((data) => {
								if (data.success) {
									// Upvote was successful, disable the button and save the state in localStorage
									button.disabled = true;
									localStorage.setItem("hasUpvoted-" + articleId, true);
									fetch(`/articles/${articleId}/upvotes`)
										.then((response) => response.json())
										.then((data) => {
											console.log("Latest upvote count: " + data.userUpvoteCount);
											// Update the upvote count in the button's text
											button.textContent = `üëç I like this x ${data.userUpvoteCount}`;
										});
								} else {
									throw new Error("Upvote failed");
								}
							});
					})
					.catch((error) => {
						console.error("Error:", error);
						// Show a popup to the user
						alert("Please log in to rate articles.");
					});
			});
		});
	</script>
	
</html>
